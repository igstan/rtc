head	1.4;
access;
symbols;
locks; strict;
comment	@ * @;


1.4
date	2002.08.15.16.22.23;	author suan;	state Exp;
branches;
next	1.3;

1.3
date	2002.08.15.14.51.26;	author suan;	state Exp;
branches;
next	1.2;

1.2
date	2002.08.12.20.18.11;	author suan;	state Exp;
branches;
next	1.1;

1.1
date	2002.04.18.15.55.32;	author suan;	state Exp;
branches;
next	;


desc
@Encapsulates pointer-analysis-related functions.
@


1.4
log
@Split initializeECR into three phases:
1. basic - instantiate ECRs, and build argRets
2. aggregate - do struct/unions (currently collapseAlways)
3. pointers - setup initial points-to relations*
   * reincorporated change to p --pt--> x <--incl-- *p
     from p --pt--> *p
     - this effectively fixes a flaw with *op and *ext
       nodes, where before *+p and *p were combined in
       the same ECR, making it imprecise to propagate
       invalidity. The alternate solution would've been
       to keep the *p rule, but change the *op and *ext
       rules.
@
text
@#ifndef TC_PTA_H /* { */
#define TC_PTA_H

#include "ao.h"

//------------------------------------------------------

class PTanalysis {
  public:
    static void initializeECRbasic(AO& ao);
    static void initializeECRaggregate_collapseAlways(AO& ao);
    static void initializeECRaggregate_collapseOnCast(AO& ao);
    static void initializeECRpointers(AO& ao);

    static void analyzeAssigns_collapseAlways(suco_llist<TCassignEdge *>& assigns);
    static void analyzeAssigns_collapseOnCast(suco_llist<TCassignEdge *>& assigns);
};

//------------------------------------------------------

#endif /* } ifdef TC_PTA_H */
@


1.3
log
@ELIMINATED TCassignEdgeList, TCassignEdgeSet, and TCassignEdgeIterator;
replaced by SUCO equivalents;
entailed writing a new edge compare function.
@
text
@d10 4
a13 2
    static void initializeECR_collapseAlways(AO& ao);
    static void initializeECR_collapseOnCast(AO& ao);
@


1.2
log
@Transferred PTA assignment processing from tca.cpp to pta.cpp/h
@
text
@d13 2
a14 2
    static void analyzeAssigns_collapseAlways(TCassignEdgeList& assigns);
    static void analyzeAssigns_collapseOnCast(TCassignEdgeList& assigns);
@


1.1
log
@Initial revision
@
text
@a6 1
//(abstract class)
d11 1
a11 4
    virtual void something() = 0;
};

//------------------------------------------------------
d13 2
a14 3
class PTAolf : public PTanalysis {
  public:
    void something() {}
a15 1

@
